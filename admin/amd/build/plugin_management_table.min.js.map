{"version":3,"file":"plugin_management_table.min.js","sources":["../src/plugin_management_table.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {refreshTableContent} from 'core_table/dynamic';\nimport * as Selectors from 'core_table/local/dynamic/selectors';\nimport {call as fetchMany} from 'core/ajax';\nimport Pending from 'core/pending';\nimport {fetchNotifications} from 'core/notification';\n\nlet watching = false;\n\nexport default class {\n    /**\n     * @property {function[]} clickHandlers a list of handlers to call on click.\n     */\n    clickHandlers = [];\n\n    constructor() {\n        this.addClickHandler(this.handleStateToggle);\n        this.registerEventListeners();\n    }\n\n    /**\n     * Initialise an instance of the class.\n     *\n     * This is just a way of making it easier to initialise an instance of the class from PHP.\n     */\n    static init() {\n        if (watching) {\n            return;\n        }\n        watching = true;\n        new this();\n    }\n\n    /**\n     * Add a click handler to the list of handlers.\n     *\n     * @param {Function} handler A handler to call on a click event\n     */\n    addClickHandler(handler) {\n        this.clickHandlers.push(handler.bind(this));\n    }\n\n    /**\n     * Register the event listeners for this instance.\n     */\n    registerEventListeners() {\n        document.addEventListener('click', function(e) {\n            const tableRoot = this.getTableRoot(e);\n\n            if (!tableRoot) {\n                return;\n            }\n\n            this.clickHandlers.forEach((handler) => handler(tableRoot, e));\n        }.bind(this));\n    }\n\n    /**\n     * Get the table root from an event.\n     *\n     * @param {Event} e\n     * @returns {HTMLElement|bool}\n     */\n    getTableRoot(e) {\n        const tableRoot = e.target.closest(Selectors.main.region);\n        if (!tableRoot) {\n            return false;\n        }\n\n        return tableRoot;\n    }\n\n    /**\n     * Set the plugin state (enabled or disabled)\n     *\n     * @param {string} methodname The web service to call\n     * @param {string} plugin The name of the plugin to set the state for\n     * @param {number} state The state to set\n     * @returns {Promise}\n     */\n    setPluginState(methodname, plugin, state) {\n        return fetchMany([{\n            methodname,\n            args: {\n                plugin,\n                state,\n            },\n        }])[0];\n    }\n\n    /**\n     * Handle state toggling.\n     *\n     * @param {HTMLElement} tableRoot\n     * @param {Event} e\n     */\n    async handleStateToggle(tableRoot, e) {\n        const stateToggle = e.target.closest('[data-action=\"togglestate\"][data-toggle-method]');\n        if (stateToggle) {\n            e.preventDefault();\n            const pendingPromise = new Pending('core_table/dynamic:togglestate');\n\n            await this.setPluginState(\n                stateToggle.dataset.toggleMethod,\n                stateToggle.dataset.plugin,\n                stateToggle.dataset.state === '1' ? 0 : 1\n            );\n\n            const [updatedRoot] = await Promise.all([\n                refreshTableContent(tableRoot),\n                fetchNotifications(),\n            ]);\n\n            // Refocus on the link that as pressed in the first place.\n            updatedRoot.querySelector(`[data-action=\"togglestate\"][data-plugin=\"${stateToggle.dataset.plugin}\"]`).focus();\n            pendingPromise.resolve();\n        }\n    }\n}\n"],"names":["obj","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_defineProperty","key","value","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","String","Number","_toPrimitive","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","Selectors","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","prototype","hasOwnProperty","desc","set","_interopRequireWildcard","_pending","watching","_exports","constructor","this","addClickHandler","handleStateToggle","registerEventListeners","static","handler","clickHandlers","push","bind","document","addEventListener","e","tableRoot","getTableRoot","forEach","target","closest","main","region","setPluginState","methodname","plugin","state","fetchMany","args","async","stateToggle","preventDefault","pendingPromise","Pending","dataset","toggleMethod","updatedRoot","Promise","all","refreshTableContent","fetchNotifications","querySelector","concat","focus","resolve"],"mappings":"qOAkBmC,IAAAA,IAAA,SAAAC,yBAAAC,aAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,kBAAAD,IAAAA,QAAAE,iBAAAF,IAAAA,eAAAF,yBAAA,SAAAC,aAAAA,OAAAA,YAAAG,iBAAAD,oBAAAF,YAAA,CAAA,SAAAI,gBAAAN,IAAAO,IAAAC,cAAAD,IAAA,SAAAE,KAAAF,IAAAA,IAAA,SAAAG,MAAAC,SAAA,iBAAAD,OAAAA,OAAAA,MAAAA,OAAAA,UAAAE,KAAAF,MAAAG,OAAAC,aAAA,QAAAC,IAAAH,UAAAI,IAAAJ,KAAAK,KAAAP,MAAAC,MAAAK,WAAAA,oBAAAA,WAAAA,IAAA,MAAA,IAAAE,UAAAP,+CAAAA,CAAAA,kBAAAA,KAAAQ,OAAAC,QAAAV,MAAA,CAAAW,CAAAZ,IAAA,UAAA,MAAAF,iBAAAA,IAAAA,IAAAY,OAAAZ,IAAA,CAAAe,CAAAf,QAAAP,IAAAuB,OAAAC,eAAAxB,IAAAO,IAAA,CAAAC,MAAAA,MAAAiB,YAAA,EAAAC,cAAAC,EAAAA,cAAA3B,IAAAO,KAAAC,MAAAR,GAAA,iFAFnC4B,UAEmC,SAAA5B,IAAAE,aAAAA,IAAAA,aAAAF,KAAAA,IAAA6B,WAAA7B,OAAAA,IAAAA,GAAAA,OAAAA,KAAAA,iBAAAA,KAAA8B,mBAAA9B,IAAA8B,MAAAA,CAAAA,QAAA9B,KAAA+B,IAAAA,MAAA9B,yBAAAC,aAAA,GAAA6B,OAAAA,MAAAC,IAAAhC,KAAA,OAAA+B,MAAAE,IAAAjC,KAAA,IAAAkC,OAAAC,GAAAA,sBAAAZ,OAAAC,gBAAAD,OAAAa,yBAAA7B,IAAAA,IAAAA,OAAAP,IAAAO,eAAAA,KAAAgB,OAAAc,UAAAC,eAAArB,KAAAjB,IAAAO,KAAA,CAAA,IAAAgC,KAAAJ,sBAAAZ,OAAAa,yBAAApC,IAAAO,KAAAgC,KAAAA,OAAAA,KAAAN,KAAAM,KAAAC,KAAAjB,OAAAC,eAAAU,OAAA3B,IAAAgC,MAAAL,OAAA3B,KAAAP,IAAAO,IAAA2B,CAAAA,OAAAJ,QAAA9B,IAAA+B,OAAAA,MAAAS,IAAAxC,IAAAkC,eAAAA,MAAA,CAFnCO,CAAAb,WAEAc,UAAmC1C,IAAnC0C,WAAmC1C,IAAA6B,WAAA7B,IAAA8B,CAAAA,QAAA9B,KAGnC,IAAI2C,UAAW,EA+Gd,OAAAC,SAAAd,QA7Gc,MAMXe,cAAcvC,qCAFE,IAGZwC,KAAKC,gBAAgBD,KAAKE,mBAC1BF,KAAKG,wBACT,CAOAC,cACQP,WAGJA,UAAW,EACX,IAAIG,KACR,CAOAC,gBAAgBI,SACZL,KAAKM,cAAcC,KAAKF,QAAQG,KAAKR,MACzC,CAKAG,yBACIM,SAASC,iBAAiB,QAAS,SAASC,GACxC,MAAMC,UAAYZ,KAAKa,aAAaF,GAE/BC,WAILZ,KAAKM,cAAcQ,SAAST,SAAYA,QAAQO,UAAWD,IAC/D,EAAEH,KAAKR,MACX,CAQAa,aAAaF,GACT,MAAMC,UAAYD,EAAEI,OAAOC,QAAQlC,UAAUmC,KAAKC,QAClD,OAAKN,YACM,CAIf,CAUAO,eAAeC,WAAYC,OAAQC,OAC/B,OAAO,EAAAC,MAASpD,MAAC,CAAC,CACdiD,sBACAI,KAAM,CACFH,cACAC,gBAEJ,EACR,CAQAG,wBAAwBb,UAAWD,GAC/B,MAAMe,YAAcf,EAAEI,OAAOC,QAAQ,mDACrC,GAAIU,YAAa,CACbf,EAAEgB,iBACF,MAAMC,eAAiB,IAAIC,SAAO7C,QAAC,wCAE7BgB,KAAKmB,eACPO,YAAYI,QAAQC,aACpBL,YAAYI,QAAQT,OACU,MAA9BK,YAAYI,QAAQR,MAAgB,EAAI,GAG5C,MAAOU,mBAAqBC,QAAQC,IAAI,EACpC,EAAAC,SAAmBA,qBAACvB,YACpB,EAAAwB,cAAkBA,wBAItBJ,YAAYK,cAAaC,4CAAAA,OAA6CZ,YAAYI,QAAQT,OAAW,OAACkB,QACtGX,eAAeY,SACnB,CACJ,GACH1C,SAAAd,OAAA"}