{"version":3,"file":"placement.min.js","sources":["../src/placement.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to load and render the tools for the AI assist plugin.\n *\n * @module     aiplacement_courseassist/placement\n * @copyright  2024 Huong Nguyen <huongnv13@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport 'core/copy_to_clipboard';\nimport Notification from 'core/notification';\nimport Selectors from 'aiplacement_courseassist/selectors';\nimport Policy from 'core_ai/policy';\nimport AIHelper from 'core_ai/helper';\nimport Drawer from 'core/drawer';\n\nconst AICourseAssist = class {\n\n    /**\n     * The user ID.\n     * @type {Integer}\n     */\n    userId;\n    /**\n     * The context ID.\n     * @type {Integer}\n     */\n    contextId;\n\n    /**\n     * Constructor.\n     * @param {Integer} userId The user ID.\n     * @param {Integer} contextId The context ID.\n     */\n    constructor(userId, contextId) {\n        this.userId = userId;\n        this.contextId = contextId;\n\n        this.aiDrawerElement = document.querySelector(Selectors.ELEMENTS.AIDRAWER);\n        this.aiDrawerBodyElement = document.querySelector(Selectors.ELEMENTS.AIDRAWER_BODY);\n        this.pageElement = document.querySelector(Selectors.ELEMENTS.PAGE);\n\n        this.registerEventListeners();\n    }\n\n    /**\n     * Register event listeners.\n     */\n    registerEventListeners() {\n        document.addEventListener('click', async(e) => {\n            const summariseAction = e.target.closest(Selectors.ACTIONS.SUMMARY);\n            if (summariseAction) {\n                e.preventDefault();\n                this.toggleAIDrawer();\n                const isPolicyAccepted = await this.isPolicyAccepted();\n                if (!isPolicyAccepted) {\n                    // Display policy.\n                    this.displayPolicy();\n                    return;\n                }\n                // Display summary.\n                this.displaySummary();\n            }\n            // Close AI drawer if message drawer is open.\n            const messageDrawerToggle = e.target.closest(Selectors.ELEMENTS.MESSAGE_DRAWER_TOGGLE);\n            if (messageDrawerToggle && this.isAIDrawerOpen()) {\n                const messageDrawer = document.querySelector(Selectors.ELEMENTS.MESSAGE_DRAWER);\n                if (messageDrawer && !messageDrawer.classList.contains('hidden')) {\n                    this.closeAIDrawer();\n                    messageDrawerToggle.focus();\n                }\n            }\n        });\n    }\n\n    /**\n     * Register event listeners for the policy.\n     */\n    registerPolicyEventListeners() {\n        const acceptAction = document.querySelector(Selectors.ACTIONS.ACCEPT);\n        const declineAction = document.querySelector(Selectors.ACTIONS.DECLINE);\n        if (acceptAction) {\n            acceptAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.acceptPolicy().then(() => {\n                    return this.displaySummary();\n                }).catch(Notification.exception);\n            });\n        }\n        if (declineAction) {\n            declineAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.closeAIDrawer();\n            });\n        }\n    }\n\n    /**\n     * Register event listeners for the error.\n     */\n    registerErrorEventListeners() {\n        const retryAction = document.querySelector(Selectors.ACTIONS.RETRY);\n        if (retryAction) {\n            retryAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.aiDrawerBodyElement.dataset.hasdata = '0';\n                this.displaySummary();\n            });\n        }\n    }\n\n    /**\n     * Register event listeners for the response.\n     */\n    registerResponseEventListeners() {\n        const regenerateAction = document.querySelector(Selectors.ACTIONS.REGENERATE);\n        if (regenerateAction) {\n            regenerateAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.aiDrawerBodyElement.dataset.hasdata = '0';\n                this.displaySummary();\n            });\n        }\n    }\n\n    registerLoadingEventListeners() {\n        const cancelAction = document.querySelector(Selectors.ACTIONS.CANCEL);\n        if (cancelAction) {\n            cancelAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.setRequestCancelled();\n                this.toggleAIDrawer();\n            });\n        }\n    }\n\n    /**\n     * Check if the AI drawer is open.\n     * @return {boolean} True if the AI drawer is open, false otherwise.\n     */\n    isAIDrawerOpen() {\n        return this.aiDrawerElement.classList.contains('show');\n    }\n\n    /**\n     * Check if the request is cancelled.\n     * @return {boolean} True if the request is cancelled, false otherwise.\n     */\n    isRequestCancelled() {\n        return this.aiDrawerBodyElement.dataset.cancelled === '1';\n    }\n\n    setRequestCancelled() {\n        this.aiDrawerBodyElement.dataset.cancelled = '1';\n    }\n\n    /**\n     * Open the AI drawer.\n     */\n    openAIDrawer() {\n        this.closeMessageDrawer();\n        this.aiDrawerElement.classList.add('show');\n        this.aiDrawerBodyElement.setAttribute('aria-live', 'polite');\n        if (!this.pageElement.classList.contains('show-drawer-right')) {\n            this.addPadding();\n        }\n        // Disable the summary button.\n        this.disableSummaryButton();\n    }\n\n    /**\n     * Close message drawer.\n     */\n    closeMessageDrawer() {\n        var messageElement = document.querySelector(Selectors.ELEMENTS.MESSAGE_DRAWER).parentElement;\n        if (!messageElement.classList.contains('hidden')) {\n            Drawer.hide(messageElement);\n        }\n    }\n\n    /**\n     * Close the AI drawer.\n     */\n    closeAIDrawer() {\n        this.aiDrawerElement.classList.remove('show');\n        this.aiDrawerBodyElement.removeAttribute('aria-live');\n        if (this.pageElement.classList.contains('show-drawer-right') && this.aiDrawerBodyElement.dataset.removepadding === '1') {\n            this.removePadding();\n        }\n        // Enable the summary button.\n        this.enableSummaryButton();\n    }\n\n    /**\n     * Toggle the AI drawer.\n     */\n    toggleAIDrawer() {\n        if (this.isAIDrawerOpen()) {\n            this.closeAIDrawer();\n        } else {\n            this.openAIDrawer();\n        }\n    }\n\n    /**\n     * Add padding to the page to make space for the AI drawer.\n     */\n    addPadding() {\n        this.pageElement.classList.add('show-drawer-right');\n        this.aiDrawerBodyElement.dataset.removepadding = '1';\n    }\n\n    /**\n     * Remove padding from the page.\n     */\n    removePadding() {\n        this.pageElement.classList.remove('show-drawer-right');\n        this.aiDrawerBodyElement.dataset.removepadding = '0';\n    }\n\n    /**\n     * Disable the summary button.\n     */\n    disableSummaryButton() {\n        const summaryButton = document.querySelector(Selectors.ACTIONS.SUMMARY);\n        if (summaryButton) {\n            summaryButton.setAttribute('disabled', 1);\n        }\n    }\n\n    /**\n     * Enable the summary button and focus on it.\n     */\n    enableSummaryButton() {\n        const summaryButton = document.querySelector(Selectors.ACTIONS.SUMMARY);\n        if (summaryButton) {\n            summaryButton.removeAttribute('disabled');\n            summaryButton.focus();\n        }\n    }\n\n    /**\n     * Check if the policy is accepted.\n     * @return {bool} True if the policy is accepted, false otherwise.\n     */\n    async isPolicyAccepted() {\n        return await Policy.getPolicyStatus(this.userId);\n    }\n\n    /**\n     * Accept the policy.\n     * @return {Promise<Object>}\n     */\n    acceptPolicy() {\n        return Policy.acceptPolicy();\n    }\n\n    /**\n     * Check if the AI drawer has generated content or not.\n     * @return {boolean} True if the AI drawer has generated content, false otherwise.\n     */\n    hasGeneratedContent() {\n        return this.aiDrawerBodyElement.dataset.hasdata === '1';\n    }\n\n    /**\n     * Display the policy.\n     */\n    displayPolicy() {\n        Templates.render('core_ai/policyblock', {}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.registerPolicyEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Display the loading spinner.\n     */\n    displayLoading() {\n        Templates.render('aiplacement_courseassist/loading', {}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.registerLoadingEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Display the summary.\n     */\n    async displaySummary() {\n        if (!this.hasGeneratedContent()) {\n            // Display loading spinner.\n            this.displayLoading();\n            // Clear the drawer content to prevent sending some unnecessary content.\n            this.aiDrawerBodyElement.innerHTML = '';\n            const request = {\n                methodname: 'aiplacement_courseassist_summarise_text',\n                args: {\n                    contextid: this.contextId,\n                    prompttext: this.getTextContent(),\n                }\n            };\n            try {\n                const responseObj = await Ajax.call([request])[0];\n                if (responseObj.error) {\n                    window.console.log(responseObj.error);\n                    this.displayError();\n                    return;\n                } else {\n                    if (!this.isRequestCancelled()) {\n                        window.console.log(responseObj);\n                        // Replace double line breaks with <br> and with </p><p> for paragraphs.\n                        const generatedContent = AIHelper.replaceLineBreaks(responseObj.generatedcontent);\n                        this.displayResponse(generatedContent);\n                        return;\n                    } else {\n                        this.aiDrawerBodyElement.dataset.cancelled = '0';\n                    }\n                }\n            } catch (error) {\n                window.console.log(error);\n            }\n        }\n    }\n\n    /**\n     * Display the response.\n     * @param {String} content The content to display.\n     */\n    displayResponse(content) {\n        Templates.render('aiplacement_courseassist/response', {content: content}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.aiDrawerBodyElement.dataset.hasdata = '1';\n            this.registerResponseEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Display the error.\n     */\n    displayError() {\n        Templates.render('aiplacement_courseassist/error', {}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.registerErrorEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Get the text content of the main region.\n     * @return {String} The text content.\n     */\n    getTextContent() {\n        const mainRegion = document.querySelector(Selectors.ELEMENTS.MAIN_REGION);\n        return mainRegion.innerText || mainRegion.textContent;\n    }\n};\n\nexport default AICourseAssist;\n"],"names":["constructor","userId","contextId","aiDrawerElement","document","querySelector","Selectors","ELEMENTS","AIDRAWER","aiDrawerBodyElement","AIDRAWER_BODY","pageElement","PAGE","registerEventListeners","addEventListener","async","e","target","closest","ACTIONS","SUMMARY","preventDefault","toggleAIDrawer","this","isPolicyAccepted","displayPolicy","displaySummary","messageDrawerToggle","MESSAGE_DRAWER_TOGGLE","isAIDrawerOpen","messageDrawer","MESSAGE_DRAWER","classList","contains","closeAIDrawer","focus","registerPolicyEventListeners","acceptAction","ACCEPT","declineAction","DECLINE","acceptPolicy","then","catch","Notification","exception","registerErrorEventListeners","retryAction","RETRY","dataset","hasdata","registerResponseEventListeners","regenerateAction","REGENERATE","registerLoadingEventListeners","cancelAction","CANCEL","setRequestCancelled","isRequestCancelled","cancelled","openAIDrawer","closeMessageDrawer","add","setAttribute","addPadding","disableSummaryButton","messageElement","parentElement","hide","remove","removeAttribute","removepadding","removePadding","enableSummaryButton","summaryButton","Policy","getPolicyStatus","hasGeneratedContent","render","html","innerHTML","displayLoading","request","methodname","args","contextid","prompttext","getTextContent","responseObj","Ajax","call","error","window","console","log","displayError","generatedContent","AIHelper","replaceLineBreaks","generatedcontent","displayResponse","content","mainRegion","MAIN_REGION","innerText","textContent"],"mappings":"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"}