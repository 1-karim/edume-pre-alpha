{"version":3,"file":"delete.min.js","sources":["../../../src/bulkactions/grading/delete.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Class that defines the bulk action for removing submissions in the assignment grading page.\n *\n * @module     mod_assign/bulkactions/grading/delete\n * @copyright  2024 Shamim Rezaie <shamim@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport BulkAction from 'core/bulkactions/bulk_action';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport {getString} from 'core/str';\n\nconst Selectors = {\n    selectBulkItemCheckbox: 'input[type=\"checkbox\"][name=\"selectedusers\"]:checked',\n};\n\nexport default class extends BulkAction {\n    /** @type {number} The course module ID. */\n    #cmid;\n\n    /** @type {string} The session key. */\n    #sesskey;\n\n    /**\n     * The class constructor.\n     *\n     * @param {number} cmid The course module ID.\n     * @param {string} sesskey The session key.\n     */\n    constructor(cmid, sesskey) {\n        super();\n        this.#cmid = cmid;\n        this.#sesskey = sesskey;\n    }\n\n    getBulkActionTriggerSelector() {\n        return '[data-type=\"bulkactions\"] [data-action=\"removesubmission\"]';\n    }\n\n    async triggerBulkAction() {\n        Notification.deleteCancelPromise(\n            getString('removesubmission', 'mod_assign'),\n            getString('batchoperationconfirmremovesubmission', 'mod_assign'),\n            getString('batchoperationremovesubmission', 'mod_assign'),\n        ).then(() => {\n            const selectedUsers = [...document.querySelectorAll(Selectors.selectBulkItemCheckbox)].map(checkbox => checkbox.value);\n            const url = new URL(window.location.href);\n            url.searchParams.set('id', this.#cmid);\n\n            const form = document.createElement('form');\n            form.method = 'POST';\n            form.action = url.toString();\n\n            // Create hidden inputs for the form.\n            ((form, hiddenInputs) => {\n                for (const [name, value] of Object.entries(hiddenInputs)) {\n                    const input = document.createElement('input');\n                    input.type = 'hidden';\n                    input.name = name;\n                    input.value = value;\n                    form.appendChild(input);\n                }\n            })(form, {\n                action: 'gradingbatchoperation',\n                operation: 'removesubmission',\n                selectedusers: selectedUsers.join(','),\n                sesskey: this.#sesskey,\n            });\n\n            // Append the form to the body, submit it, and then remove it from the DOM.\n            document.body.appendChild(form);\n            form.submit();\n            form.remove();\n\n            return;\n        }).catch(() => {\n            return;\n        });\n    }\n\n    async renderBulkActionTrigger(showInDropdown, index) {\n        return Templates.render('mod_assign/bulkactions/grading/bulk_delete_trigger', {\n            showindropdown: showInDropdown,\n            isfirst: index === 0,\n        });\n    }\n}\n"],"names":["Selectors","BulkAction","constructor","cmid","sesskey","getBulkActionTriggerSelector","deleteCancelPromise","then","selectedUsers","document","querySelectorAll","map","checkbox","value","url","URL","window","location","href","searchParams","set","this","form","createElement","method","action","toString","hiddenInputs","name","Object","entries","input","type","appendChild","operation","selectedusers","join","body","submit","remove","catch","showInDropdown","index","Templates","render","showindropdown","isfirst"],"mappings":"qhDA4BMA,iCACsB,yHAGCC,qBAazBC,YAAYC,KAAMC,yLAEDD,0CACGC,SAGpBC,qCACW,6GAIMC,qBACT,kBAAU,mBAAoB,eAC9B,kBAAU,wCAAyC,eACnD,kBAAU,iCAAkC,eAC9CC,MAAK,WACGC,cAAgB,IAAIC,SAASC,iBAAiBV,mCAAmCW,KAAIC,UAAYA,SAASC,QAC1GC,IAAM,IAAIC,IAAIC,OAAOC,SAASC,MACpCJ,IAAIK,aAAaC,IAAI,2BAAMC,mBAErBC,KAAOb,SAASc,cAAc,QACpCD,KAAKE,OAAS,OACdF,KAAKG,OAASX,IAAIY,aAGhBJ,KAAMK,oBACC,MAAOC,KAAMf,SAAUgB,OAAOC,QAAQH,cAAe,OAChDI,MAAQtB,SAASc,cAAc,SACrCQ,MAAMC,KAAO,SACbD,MAAMH,KAAOA,KACbG,MAAMlB,MAAQA,MACdS,KAAKW,YAAYF,UAEtBT,KAAM,CACLG,OAAQ,wBACRS,UAAW,mBACXC,cAAe3B,cAAc4B,KAAK,KAClChC,8BAASiB,iBAIbZ,SAAS4B,KAAKJ,YAAYX,MAC1BA,KAAKgB,SACLhB,KAAKiB,YAGNC,OAAM,uCAKiBC,eAAgBC,cACnCC,mBAAUC,OAAO,qDAAsD,CAC1EC,eAAgBJ,eAChBK,QAAmB,IAAVJ"}