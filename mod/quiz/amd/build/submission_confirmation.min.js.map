{"version":3,"file":"submission_confirmation.min.js","sources":["../src/submission_confirmation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle submission confirmation for quiz.\n *\n * @module mod_quiz/submission_confirmation\n * @copyright 2022 Huong Nguyen <huongnv13@gmail.com>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since 4.1\n */\n\nimport Notification from 'core/notification';\nimport Prefetch from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport * as Modal from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\n\nconst SELECTOR = {\n    attemptSubmitButton: '.path-mod-quiz .btn-finishattempt button',\n    attemptSubmitForm: 'form#frm-finishattempt',\n};\n\n/**\n * Register events for attempt submit button.\n */\nconst registerEventListeners = () => {\n    const submitAction = document.querySelector(SELECTOR.attemptSubmitButton);\n    if (submitAction) {\n        submitAction.addEventListener('click', e => {\n            e.preventDefault();\n            Modal.create({\n                type: Modal.types.SAVE_CANCEL,\n                title: getString('confirmation', 'admin'),\n                body: getString('confirmclose', 'quiz'),\n                buttons: {\n                    save: getString('submitallandfinish', 'quiz')\n                },\n            }).then(modal => {\n                modal.show();\n                return modal;\n            }).then(modal => {\n                modal.getRoot().on(ModalEvents.save, () => {\n                    const attemptForm = submitAction.closest(SELECTOR.attemptSubmitForm);\n                    attemptForm.submit();\n                });\n                return modal;\n            }).catch(Notification.exception);\n        });\n    }\n};\n\n/**\n * Initialises.\n */\nexport const init = () => {\n    Prefetch.prefetchStrings('core_admin', ['confirmation']);\n    Prefetch.prefetchStrings('quiz', ['confirmclose', 'submitallandfinish']);\n    registerEventListeners();\n};\n"],"names":["SELECTOR","prefetchStrings","submitAction","document","querySelector","addEventListener","e","preventDefault","Modal","create","type","types","SAVE_CANCEL","title","body","buttons","save","then","modal","show","getRoot","on","ModalEvents","closest","submit","catch","Notification","exception","registerEventListeners"],"mappings":";;;;;;;;8QA8BMA,6BACmB,2CADnBA,2BAEiB,uCAmCH,uBACPC,gBAAgB,aAAc,CAAC,mCAC/BA,gBAAgB,OAAQ,CAAC,eAAgB,uBA/BvB,YACrBC,aAAeC,SAASC,cAAcJ,8BACxCE,cACAA,aAAaG,iBAAiB,SAASC,IACnCA,EAAEC,iBACFC,MAAMC,OAAO,CACTC,KAAMF,MAAMG,MAAMC,YAClBC,OAAO,mBAAU,eAAgB,SACjCC,MAAM,mBAAU,eAAgB,QAChCC,QAAS,CACLC,MAAM,mBAAU,qBAAsB,WAE3CC,MAAKC,QACJA,MAAMC,OACCD,SACRD,MAAKC,QACJA,MAAME,UAAUC,GAAGC,YAAYN,MAAM,KACbd,aAAaqB,QAAQvB,4BAC7BwB,YAETN,SACRO,MAAMC,sBAAaC,eAW9BC"}